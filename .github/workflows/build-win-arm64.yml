name: Build OpenCVSharp ARM64

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-opencv-arm64:
    runs-on: windows-latest

    steps:
      - name: Checkout OpenCVSharp
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Cache OpenCV
        id: cache-opencv
        uses: actions/cache@v4
        with:
          path: D:\opencv-install
          key: opencv-4.11.0-arm64-v3-${{ runner.os }}

      - name: Clone OpenCV
        if: steps.cache-opencv.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          cd /d D:\
          git clone --depth 1 --branch 4.11.0 https://github.com/opencv/opencv.git
          git clone --depth 1 --branch 4.11.0 https://github.com/opencv/opencv_contrib.git

      - name: Configure OpenCV for ARM64
        if: steps.cache-opencv.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          cd /d D:\opencv
          if exist build rmdir /s /q build
          mkdir build
          cd build
          
          cmake -G "Visual Studio 17 2022" -A ARM64 ^
            -D CMAKE_BUILD_TYPE=Release ^
            -D CMAKE_INSTALL_PREFIX=D:\opencv-install ^
            -D OPENCV_EXTRA_MODULES_PATH=D:\opencv_contrib\modules ^
            -D BUILD_DOCS=OFF ^
            -D BUILD_EXAMPLES=OFF ^
            -D BUILD_TESTS=OFF ^
            -D BUILD_PERF_TESTS=OFF ^
            -D BUILD_JAVA=OFF ^
            -D BUILD_opencv_apps=OFF ^
            -D BUILD_opencv_datasets=OFF ^
            -D BUILD_opencv_gapi=OFF ^
            -D BUILD_opencv_java_bindings_generator=OFF ^
            -D BUILD_opencv_js=OFF ^
            -D BUILD_opencv_js_bindings_generator=OFF ^
            -D BUILD_opencv_python_bindings_generator=OFF ^
            -D BUILD_opencv_python_tests=OFF ^
            -D BUILD_opencv_ts=OFF ^
            -D BUILD_opencv_world=OFF ^
            -D BUILD_opencv_dnn=OFF ^
            -D WITH_MSMF=ON ^
            -D WITH_MSMF_DXVA=ON ^
            -D WITH_QT=OFF ^
            -D WITH_CAROTENE=OFF ^
            -D ENABLE_CXX11=1 ^
            -D BUILD_SHARED_LIBS=OFF ^
            ..

      - name: Build OpenCV for ARM64
        if: steps.cache-opencv.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          $platform = "arm64"
          $vcpkgPath = $env:VCPKG_ROOT
          $buildDirectory = "D:\opencv-build"
          
          New-Item -ItemType Directory -Force -Path $buildDirectory | Out-Null
          Set-Location $buildDirectory
          
          cmake -G "Visual Studio 17 2022" `
            -A ARM64 `
            -D CMAKE_BUILD_TYPE=Release `
            -D CMAKE_INSTALL_PREFIX=install `
            -D INSTALL_C_EXAMPLES=OFF `
            -D INSTALL_PYTHON_EXAMPLES=OFF `
            -D BUILD_DOCS=OFF `
            -D BUILD_WITH_DEBUG_INFO=OFF `
            -D BUILD_EXAMPLES=OFF `
            -D BUILD_TESTS=OFF `
            -D BUILD_PERF_TESTS=OFF `
            -D BUILD_JAVA=OFF `
            -D BUILD_opencv_apps=OFF `
            -D BUILD_opencv_datasets=OFF `
            -D BUILD_opencv_gapi=OFF `
            -D BUILD_opencv_java_bindings_generator=OFF `
            -D BUILD_opencv_js=OFF `
            -D BUILD_opencv_js_bindings_generator=OFF `
            -D BUILD_opencv_objc_bindings_generator=OFF `
            -D BUILD_opencv_python_bindings_generator=OFF `
            -D BUILD_opencv_python_tests=OFF `
            -D BUILD_opencv_ts=OFF `
            -D BUILD_opencv_world=OFF `
            -D BUILD_opencv_dnn=OFF `
            -D WITH_MSMF=ON `
            -D WITH_MSMF_DXVA=ON `
            -D WITH_QT=OFF `
            -D WITH_FREETYPE=OFF `
            -D WITH_TESSERACT=OFF `
            -D WITH_CAROTENE=OFF `
            -D WITH_JPEG=ON `
            -D BUILD_JPEG=ON `
            -D WITH_JPEG_TURBO=OFF `
            -D ENABLE_CXX11=1 `
            -D OPENCV_ENABLE_NONFREE=ON `
            -D OPENCV_EXTRA_MODULES_PATH=D:/opencv_contrib/modules `
            -D BUILD_SHARED_LIBS=OFF `
            D:/opencv
          
          msbuild INSTALL.vcxproj /t:build /p:configuration=Release /p:platform=ARM64 /maxcpucount

      - name: Build OpenCVSharp Native
        shell: cmd
        run: |
          cd /d ${{ github.workspace }}
          if exist build_native rmdir /s /q build_native
          mkdir build_native
          cd build_native
          
          cmake -G "Visual Studio 17 2022" -A ARM64 ^
            -D CMAKE_BUILD_TYPE=Release ^
            -D OpenCV_DIR=D:\opencv-install ^
            -D CMAKE_INSTALL_PREFIX=%CD%\install ^
            ..\src\OpenCvSharpExtern
          
          msbuild INSTALL.vcxproj /t:build /p:configuration=Release /p:platform=ARM64

      - name: Upload Native Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opencvsharp-native-arm64-windows
          path: build_native/install/**/*
